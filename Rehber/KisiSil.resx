<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAADd
        dQAA3XUBrIfDgwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABieSURBVHhe7d15
        0LZ9OcDxN2sqiSQVoWRJCEOUpCyRZey7YSxRoUVaEMbYl2GMZVDKkhQq+1b2rWyRENmylIpslVaOo3r1
        dr/H+z73/Tz39TuO87w+n5nvTPzRnPd1/ZaZ0+F6LgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgjP+VJLUErapFKUk6fNCqWpSSpMMH
        rapFKUk6fNCqWpSSpMMHrapFKUk6fNCqWpSSpMMHrapFKUk6fNCqWpSSpMMHrapFKUk6fNCqWpSSpMMH
        rapFKUk6fNCqWpSSpMMHrapFKUk6fNCqWpSSpMMHrapFKUk6fNCqWpSSpMMHrapFKUk6fNCqWpSSpMMH
        rapFKUk6fNCqWpSSpMMHrapFKUk6fNCqWpSSpMMHrapFKUk6fNCqWpSSpMMHrapFKUk6fNCqWpSSpMMH
        rapFKUk6fNCqWpSSpMMHrapFKUk6fNCqWpSSpMMHrapFKUk6fNCqWpSd/Xl03QjgvOSZkmdLdeZ0Bq2q
        RdndT0TXiAAuVZ4leaZUZ0130KpalBP68gjgUuVZUp0xE4JW1aKc0MuiD4sALlaeIXmWVGfMhKBVtSin
        9B/R20QAZ5VnR54h1dkyJWj1jKhamFP6s+j1I4DTyjMjz47qTJlSnr3Q6vbRi6NqgU7pMZGhQOA08qzI
        M6M6S6aUZ26evdDu3lG1SCf1oAjgQvKsqM6QSeWZC2M8KqoW6pRykOdDIoCrkmfE5KG/LM9aGOU60fT/
        m9m/R7eIAE7KsyHPiOrsmFKesXnWwjhvG02fmn1KZAMBV5RnQp4N1ZkxpTxb84yFsT48mv4K7ccjQ4FA
        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
        fAAAAABJRU5ErkJggg==
</value>
  </data>
</root>